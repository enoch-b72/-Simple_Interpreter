Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> let_statement
Rule 5     statement -> print_statement
Rule 6     statement -> if_statement
Rule 7     let_statement -> LET IDENTIFIER EQ expression SEMI
Rule 8     print_statement -> PRINT LPAREN expression RPAREN SEMI
Rule 9     print_statement -> PRINT LPAREN QUOTE string QUOTE RPAREN SEMI
Rule 10    if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
Rule 11    if_statement -> IF expression LBRACE statement_list RBRACE
Rule 12    expression -> term
Rule 13    expression -> expression PLUS term
Rule 14    expression -> expression MINUS term
Rule 15    expression -> expression LT term
Rule 16    expression -> expression GT term
Rule 17    expression -> expression LE term
Rule 18    expression -> expression GE term
Rule 19    expression -> expression EQEQ term
Rule 20    expression -> expression NE term
Rule 21    term -> factor
Rule 22    term -> term TIMES factor
Rule 23    term -> term DIVIDE factor
Rule 24    factor -> NUMBER
Rule 25    factor -> IDENTIFIER
Rule 26    factor -> LPAREN expression RPAREN
Rule 27    string -> IDENTIFIER
Rule 28    string -> string IDENTIFIER

Terminals, with rules where they appear

DIVIDE               : 23
ELSE                 : 10
EQ                   : 7
EQEQ                 : 19
GE                   : 18
GT                   : 16
IDENTIFIER           : 7 25 27 28
IF                   : 10 11
LBRACE               : 10 10 11
LE                   : 17
LET                  : 7
LPAREN               : 8 9 26
LT                   : 15
MINUS                : 14
NE                   : 20
NUMBER               : 24
PLUS                 : 13
PRINT                : 8 9
QUOTE                : 9 9
RBRACE               : 10 10 11
RPAREN               : 8 9 26
SEMI                 : 7 8 9
TIMES                : 22
error                : 

Nonterminals, with rules where they appear

expression           : 7 8 10 11 13 14 15 16 17 18 19 20 26
factor               : 21 22 23
if_statement         : 6
let_statement        : 4
print_statement      : 5
program              : 0
statement            : 2 3
statement_list       : 1 3 10 10 11
string               : 9 28
term                 : 12 13 14 15 16 17 18 19 20 22 23

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . let_statement
    (5) statement -> . print_statement
    (6) statement -> . if_statement
    (7) let_statement -> . LET IDENTIFIER EQ expression SEMI
    (8) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (9) print_statement -> . PRINT LPAREN QUOTE string QUOTE RPAREN SEMI
    (10) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) if_statement -> . IF expression LBRACE statement_list RBRACE

    LET             shift and go to state 7
    PRINT           shift and go to state 8
    IF              shift and go to state 9

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    let_statement                  shift and go to state 4
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . let_statement
    (5) statement -> . print_statement
    (6) statement -> . if_statement
    (7) let_statement -> . LET IDENTIFIER EQ expression SEMI
    (8) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (9) print_statement -> . PRINT LPAREN QUOTE string QUOTE RPAREN SEMI
    (10) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) if_statement -> . IF expression LBRACE statement_list RBRACE

    $end            reduce using rule 1 (program -> statement_list .)
    LET             shift and go to state 7
    PRINT           shift and go to state 8
    IF              shift and go to state 9

    statement                      shift and go to state 10
    let_statement                  shift and go to state 4
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6

state 3

    (2) statement_list -> statement .

    LET             reduce using rule 2 (statement_list -> statement .)
    PRINT           reduce using rule 2 (statement_list -> statement .)
    IF              reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> let_statement .

    LET             reduce using rule 4 (statement -> let_statement .)
    PRINT           reduce using rule 4 (statement -> let_statement .)
    IF              reduce using rule 4 (statement -> let_statement .)
    $end            reduce using rule 4 (statement -> let_statement .)
    RBRACE          reduce using rule 4 (statement -> let_statement .)


state 5

    (5) statement -> print_statement .

    LET             reduce using rule 5 (statement -> print_statement .)
    PRINT           reduce using rule 5 (statement -> print_statement .)
    IF              reduce using rule 5 (statement -> print_statement .)
    $end            reduce using rule 5 (statement -> print_statement .)
    RBRACE          reduce using rule 5 (statement -> print_statement .)


state 6

    (6) statement -> if_statement .

    LET             reduce using rule 6 (statement -> if_statement .)
    PRINT           reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    $end            reduce using rule 6 (statement -> if_statement .)
    RBRACE          reduce using rule 6 (statement -> if_statement .)


state 7

    (7) let_statement -> LET . IDENTIFIER EQ expression SEMI

    IDENTIFIER      shift and go to state 11


state 8

    (8) print_statement -> PRINT . LPAREN expression RPAREN SEMI
    (9) print_statement -> PRINT . LPAREN QUOTE string QUOTE RPAREN SEMI

    LPAREN          shift and go to state 12


state 9

    (10) if_statement -> IF . expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) if_statement -> IF . expression LBRACE statement_list RBRACE
    (12) expression -> . term
    (13) expression -> . expression PLUS term
    (14) expression -> . expression MINUS term
    (15) expression -> . expression LT term
    (16) expression -> . expression GT term
    (17) expression -> . expression LE term
    (18) expression -> . expression GE term
    (19) expression -> . expression EQEQ term
    (20) expression -> . expression NE term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . IDENTIFIER
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 18

    expression                     shift and go to state 13
    term                           shift and go to state 14
    factor                         shift and go to state 15

state 10

    (3) statement_list -> statement_list statement .

    LET             reduce using rule 3 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 3 (statement_list -> statement_list statement .)
    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement_list statement .)


state 11

    (7) let_statement -> LET IDENTIFIER . EQ expression SEMI

    EQ              shift and go to state 19


state 12

    (8) print_statement -> PRINT LPAREN . expression RPAREN SEMI
    (9) print_statement -> PRINT LPAREN . QUOTE string QUOTE RPAREN SEMI
    (12) expression -> . term
    (13) expression -> . expression PLUS term
    (14) expression -> . expression MINUS term
    (15) expression -> . expression LT term
    (16) expression -> . expression GT term
    (17) expression -> . expression LE term
    (18) expression -> . expression GE term
    (19) expression -> . expression EQEQ term
    (20) expression -> . expression NE term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . IDENTIFIER
    (26) factor -> . LPAREN expression RPAREN

    QUOTE           shift and go to state 21
    NUMBER          shift and go to state 16
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 18

    expression                     shift and go to state 20
    term                           shift and go to state 14
    factor                         shift and go to state 15

state 13

    (10) if_statement -> IF expression . LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) if_statement -> IF expression . LBRACE statement_list RBRACE
    (13) expression -> expression . PLUS term
    (14) expression -> expression . MINUS term
    (15) expression -> expression . LT term
    (16) expression -> expression . GT term
    (17) expression -> expression . LE term
    (18) expression -> expression . GE term
    (19) expression -> expression . EQEQ term
    (20) expression -> expression . NE term

    LBRACE          shift and go to state 22
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    LT              shift and go to state 25
    GT              shift and go to state 26
    LE              shift and go to state 27
    GE              shift and go to state 28
    EQEQ            shift and go to state 29
    NE              shift and go to state 30


state 14

    (12) expression -> term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    LBRACE          reduce using rule 12 (expression -> term .)
    PLUS            reduce using rule 12 (expression -> term .)
    MINUS           reduce using rule 12 (expression -> term .)
    LT              reduce using rule 12 (expression -> term .)
    GT              reduce using rule 12 (expression -> term .)
    LE              reduce using rule 12 (expression -> term .)
    GE              reduce using rule 12 (expression -> term .)
    EQEQ            reduce using rule 12 (expression -> term .)
    NE              reduce using rule 12 (expression -> term .)
    RPAREN          reduce using rule 12 (expression -> term .)
    SEMI            reduce using rule 12 (expression -> term .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32


state 15

    (21) term -> factor .

    TIMES           reduce using rule 21 (term -> factor .)
    DIVIDE          reduce using rule 21 (term -> factor .)
    LBRACE          reduce using rule 21 (term -> factor .)
    PLUS            reduce using rule 21 (term -> factor .)
    MINUS           reduce using rule 21 (term -> factor .)
    LT              reduce using rule 21 (term -> factor .)
    GT              reduce using rule 21 (term -> factor .)
    LE              reduce using rule 21 (term -> factor .)
    GE              reduce using rule 21 (term -> factor .)
    EQEQ            reduce using rule 21 (term -> factor .)
    NE              reduce using rule 21 (term -> factor .)
    RPAREN          reduce using rule 21 (term -> factor .)
    SEMI            reduce using rule 21 (term -> factor .)


state 16

    (24) factor -> NUMBER .

    TIMES           reduce using rule 24 (factor -> NUMBER .)
    DIVIDE          reduce using rule 24 (factor -> NUMBER .)
    LBRACE          reduce using rule 24 (factor -> NUMBER .)
    PLUS            reduce using rule 24 (factor -> NUMBER .)
    MINUS           reduce using rule 24 (factor -> NUMBER .)
    LT              reduce using rule 24 (factor -> NUMBER .)
    GT              reduce using rule 24 (factor -> NUMBER .)
    LE              reduce using rule 24 (factor -> NUMBER .)
    GE              reduce using rule 24 (factor -> NUMBER .)
    EQEQ            reduce using rule 24 (factor -> NUMBER .)
    NE              reduce using rule 24 (factor -> NUMBER .)
    RPAREN          reduce using rule 24 (factor -> NUMBER .)
    SEMI            reduce using rule 24 (factor -> NUMBER .)


state 17

    (25) factor -> IDENTIFIER .

    TIMES           reduce using rule 25 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 25 (factor -> IDENTIFIER .)
    LBRACE          reduce using rule 25 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 25 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 25 (factor -> IDENTIFIER .)
    LT              reduce using rule 25 (factor -> IDENTIFIER .)
    GT              reduce using rule 25 (factor -> IDENTIFIER .)
    LE              reduce using rule 25 (factor -> IDENTIFIER .)
    GE              reduce using rule 25 (factor -> IDENTIFIER .)
    EQEQ            reduce using rule 25 (factor -> IDENTIFIER .)
    NE              reduce using rule 25 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 25 (factor -> IDENTIFIER .)
    SEMI            reduce using rule 25 (factor -> IDENTIFIER .)


state 18

    (26) factor -> LPAREN . expression RPAREN
    (12) expression -> . term
    (13) expression -> . expression PLUS term
    (14) expression -> . expression MINUS term
    (15) expression -> . expression LT term
    (16) expression -> . expression GT term
    (17) expression -> . expression LE term
    (18) expression -> . expression GE term
    (19) expression -> . expression EQEQ term
    (20) expression -> . expression NE term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . IDENTIFIER
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 18

    expression                     shift and go to state 33
    term                           shift and go to state 14
    factor                         shift and go to state 15

state 19

    (7) let_statement -> LET IDENTIFIER EQ . expression SEMI
    (12) expression -> . term
    (13) expression -> . expression PLUS term
    (14) expression -> . expression MINUS term
    (15) expression -> . expression LT term
    (16) expression -> . expression GT term
    (17) expression -> . expression LE term
    (18) expression -> . expression GE term
    (19) expression -> . expression EQEQ term
    (20) expression -> . expression NE term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . IDENTIFIER
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 18

    expression                     shift and go to state 34
    term                           shift and go to state 14
    factor                         shift and go to state 15

state 20

    (8) print_statement -> PRINT LPAREN expression . RPAREN SEMI
    (13) expression -> expression . PLUS term
    (14) expression -> expression . MINUS term
    (15) expression -> expression . LT term
    (16) expression -> expression . GT term
    (17) expression -> expression . LE term
    (18) expression -> expression . GE term
    (19) expression -> expression . EQEQ term
    (20) expression -> expression . NE term

    RPAREN          shift and go to state 35
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    LT              shift and go to state 25
    GT              shift and go to state 26
    LE              shift and go to state 27
    GE              shift and go to state 28
    EQEQ            shift and go to state 29
    NE              shift and go to state 30


state 21

    (9) print_statement -> PRINT LPAREN QUOTE . string QUOTE RPAREN SEMI
    (27) string -> . IDENTIFIER
    (28) string -> . string IDENTIFIER

    IDENTIFIER      shift and go to state 37

    string                         shift and go to state 36

state 22

    (10) if_statement -> IF expression LBRACE . statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) if_statement -> IF expression LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . let_statement
    (5) statement -> . print_statement
    (6) statement -> . if_statement
    (7) let_statement -> . LET IDENTIFIER EQ expression SEMI
    (8) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (9) print_statement -> . PRINT LPAREN QUOTE string QUOTE RPAREN SEMI
    (10) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) if_statement -> . IF expression LBRACE statement_list RBRACE

    LET             shift and go to state 7
    PRINT           shift and go to state 8
    IF              shift and go to state 9

    statement_list                 shift and go to state 38
    statement                      shift and go to state 3
    let_statement                  shift and go to state 4
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6

state 23

    (13) expression -> expression PLUS . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . IDENTIFIER
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 18

    term                           shift and go to state 39
    factor                         shift and go to state 15

state 24

    (14) expression -> expression MINUS . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . IDENTIFIER
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 18

    term                           shift and go to state 40
    factor                         shift and go to state 15

state 25

    (15) expression -> expression LT . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . IDENTIFIER
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 18

    term                           shift and go to state 41
    factor                         shift and go to state 15

state 26

    (16) expression -> expression GT . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . IDENTIFIER
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 18

    term                           shift and go to state 42
    factor                         shift and go to state 15

state 27

    (17) expression -> expression LE . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . IDENTIFIER
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 18

    term                           shift and go to state 43
    factor                         shift and go to state 15

state 28

    (18) expression -> expression GE . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . IDENTIFIER
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 18

    term                           shift and go to state 44
    factor                         shift and go to state 15

state 29

    (19) expression -> expression EQEQ . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . IDENTIFIER
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 18

    term                           shift and go to state 45
    factor                         shift and go to state 15

state 30

    (20) expression -> expression NE . term
    (21) term -> . factor
    (22) term -> . term TIMES factor
    (23) term -> . term DIVIDE factor
    (24) factor -> . NUMBER
    (25) factor -> . IDENTIFIER
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 18

    term                           shift and go to state 46
    factor                         shift and go to state 15

state 31

    (22) term -> term TIMES . factor
    (24) factor -> . NUMBER
    (25) factor -> . IDENTIFIER
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 18

    factor                         shift and go to state 47

state 32

    (23) term -> term DIVIDE . factor
    (24) factor -> . NUMBER
    (25) factor -> . IDENTIFIER
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    IDENTIFIER      shift and go to state 17
    LPAREN          shift and go to state 18

    factor                         shift and go to state 48

state 33

    (26) factor -> LPAREN expression . RPAREN
    (13) expression -> expression . PLUS term
    (14) expression -> expression . MINUS term
    (15) expression -> expression . LT term
    (16) expression -> expression . GT term
    (17) expression -> expression . LE term
    (18) expression -> expression . GE term
    (19) expression -> expression . EQEQ term
    (20) expression -> expression . NE term

    RPAREN          shift and go to state 49
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    LT              shift and go to state 25
    GT              shift and go to state 26
    LE              shift and go to state 27
    GE              shift and go to state 28
    EQEQ            shift and go to state 29
    NE              shift and go to state 30


state 34

    (7) let_statement -> LET IDENTIFIER EQ expression . SEMI
    (13) expression -> expression . PLUS term
    (14) expression -> expression . MINUS term
    (15) expression -> expression . LT term
    (16) expression -> expression . GT term
    (17) expression -> expression . LE term
    (18) expression -> expression . GE term
    (19) expression -> expression . EQEQ term
    (20) expression -> expression . NE term

    SEMI            shift and go to state 50
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24
    LT              shift and go to state 25
    GT              shift and go to state 26
    LE              shift and go to state 27
    GE              shift and go to state 28
    EQEQ            shift and go to state 29
    NE              shift and go to state 30


state 35

    (8) print_statement -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 51


state 36

    (9) print_statement -> PRINT LPAREN QUOTE string . QUOTE RPAREN SEMI
    (28) string -> string . IDENTIFIER

    QUOTE           shift and go to state 52
    IDENTIFIER      shift and go to state 53


state 37

    (27) string -> IDENTIFIER .

    QUOTE           reduce using rule 27 (string -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 27 (string -> IDENTIFIER .)


state 38

    (10) if_statement -> IF expression LBRACE statement_list . RBRACE ELSE LBRACE statement_list RBRACE
    (11) if_statement -> IF expression LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . let_statement
    (5) statement -> . print_statement
    (6) statement -> . if_statement
    (7) let_statement -> . LET IDENTIFIER EQ expression SEMI
    (8) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (9) print_statement -> . PRINT LPAREN QUOTE string QUOTE RPAREN SEMI
    (10) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) if_statement -> . IF expression LBRACE statement_list RBRACE

    RBRACE          shift and go to state 54
    LET             shift and go to state 7
    PRINT           shift and go to state 8
    IF              shift and go to state 9

    statement                      shift and go to state 10
    let_statement                  shift and go to state 4
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6

state 39

    (13) expression -> expression PLUS term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    LBRACE          reduce using rule 13 (expression -> expression PLUS term .)
    PLUS            reduce using rule 13 (expression -> expression PLUS term .)
    MINUS           reduce using rule 13 (expression -> expression PLUS term .)
    LT              reduce using rule 13 (expression -> expression PLUS term .)
    GT              reduce using rule 13 (expression -> expression PLUS term .)
    LE              reduce using rule 13 (expression -> expression PLUS term .)
    GE              reduce using rule 13 (expression -> expression PLUS term .)
    EQEQ            reduce using rule 13 (expression -> expression PLUS term .)
    NE              reduce using rule 13 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 13 (expression -> expression PLUS term .)
    SEMI            reduce using rule 13 (expression -> expression PLUS term .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32


state 40

    (14) expression -> expression MINUS term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    LBRACE          reduce using rule 14 (expression -> expression MINUS term .)
    PLUS            reduce using rule 14 (expression -> expression MINUS term .)
    MINUS           reduce using rule 14 (expression -> expression MINUS term .)
    LT              reduce using rule 14 (expression -> expression MINUS term .)
    GT              reduce using rule 14 (expression -> expression MINUS term .)
    LE              reduce using rule 14 (expression -> expression MINUS term .)
    GE              reduce using rule 14 (expression -> expression MINUS term .)
    EQEQ            reduce using rule 14 (expression -> expression MINUS term .)
    NE              reduce using rule 14 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 14 (expression -> expression MINUS term .)
    SEMI            reduce using rule 14 (expression -> expression MINUS term .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32


state 41

    (15) expression -> expression LT term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    LBRACE          reduce using rule 15 (expression -> expression LT term .)
    PLUS            reduce using rule 15 (expression -> expression LT term .)
    MINUS           reduce using rule 15 (expression -> expression LT term .)
    LT              reduce using rule 15 (expression -> expression LT term .)
    GT              reduce using rule 15 (expression -> expression LT term .)
    LE              reduce using rule 15 (expression -> expression LT term .)
    GE              reduce using rule 15 (expression -> expression LT term .)
    EQEQ            reduce using rule 15 (expression -> expression LT term .)
    NE              reduce using rule 15 (expression -> expression LT term .)
    RPAREN          reduce using rule 15 (expression -> expression LT term .)
    SEMI            reduce using rule 15 (expression -> expression LT term .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32


state 42

    (16) expression -> expression GT term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    LBRACE          reduce using rule 16 (expression -> expression GT term .)
    PLUS            reduce using rule 16 (expression -> expression GT term .)
    MINUS           reduce using rule 16 (expression -> expression GT term .)
    LT              reduce using rule 16 (expression -> expression GT term .)
    GT              reduce using rule 16 (expression -> expression GT term .)
    LE              reduce using rule 16 (expression -> expression GT term .)
    GE              reduce using rule 16 (expression -> expression GT term .)
    EQEQ            reduce using rule 16 (expression -> expression GT term .)
    NE              reduce using rule 16 (expression -> expression GT term .)
    RPAREN          reduce using rule 16 (expression -> expression GT term .)
    SEMI            reduce using rule 16 (expression -> expression GT term .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32


state 43

    (17) expression -> expression LE term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    LBRACE          reduce using rule 17 (expression -> expression LE term .)
    PLUS            reduce using rule 17 (expression -> expression LE term .)
    MINUS           reduce using rule 17 (expression -> expression LE term .)
    LT              reduce using rule 17 (expression -> expression LE term .)
    GT              reduce using rule 17 (expression -> expression LE term .)
    LE              reduce using rule 17 (expression -> expression LE term .)
    GE              reduce using rule 17 (expression -> expression LE term .)
    EQEQ            reduce using rule 17 (expression -> expression LE term .)
    NE              reduce using rule 17 (expression -> expression LE term .)
    RPAREN          reduce using rule 17 (expression -> expression LE term .)
    SEMI            reduce using rule 17 (expression -> expression LE term .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32


state 44

    (18) expression -> expression GE term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    LBRACE          reduce using rule 18 (expression -> expression GE term .)
    PLUS            reduce using rule 18 (expression -> expression GE term .)
    MINUS           reduce using rule 18 (expression -> expression GE term .)
    LT              reduce using rule 18 (expression -> expression GE term .)
    GT              reduce using rule 18 (expression -> expression GE term .)
    LE              reduce using rule 18 (expression -> expression GE term .)
    GE              reduce using rule 18 (expression -> expression GE term .)
    EQEQ            reduce using rule 18 (expression -> expression GE term .)
    NE              reduce using rule 18 (expression -> expression GE term .)
    RPAREN          reduce using rule 18 (expression -> expression GE term .)
    SEMI            reduce using rule 18 (expression -> expression GE term .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32


state 45

    (19) expression -> expression EQEQ term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    LBRACE          reduce using rule 19 (expression -> expression EQEQ term .)
    PLUS            reduce using rule 19 (expression -> expression EQEQ term .)
    MINUS           reduce using rule 19 (expression -> expression EQEQ term .)
    LT              reduce using rule 19 (expression -> expression EQEQ term .)
    GT              reduce using rule 19 (expression -> expression EQEQ term .)
    LE              reduce using rule 19 (expression -> expression EQEQ term .)
    GE              reduce using rule 19 (expression -> expression EQEQ term .)
    EQEQ            reduce using rule 19 (expression -> expression EQEQ term .)
    NE              reduce using rule 19 (expression -> expression EQEQ term .)
    RPAREN          reduce using rule 19 (expression -> expression EQEQ term .)
    SEMI            reduce using rule 19 (expression -> expression EQEQ term .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32


state 46

    (20) expression -> expression NE term .
    (22) term -> term . TIMES factor
    (23) term -> term . DIVIDE factor

    LBRACE          reduce using rule 20 (expression -> expression NE term .)
    PLUS            reduce using rule 20 (expression -> expression NE term .)
    MINUS           reduce using rule 20 (expression -> expression NE term .)
    LT              reduce using rule 20 (expression -> expression NE term .)
    GT              reduce using rule 20 (expression -> expression NE term .)
    LE              reduce using rule 20 (expression -> expression NE term .)
    GE              reduce using rule 20 (expression -> expression NE term .)
    EQEQ            reduce using rule 20 (expression -> expression NE term .)
    NE              reduce using rule 20 (expression -> expression NE term .)
    RPAREN          reduce using rule 20 (expression -> expression NE term .)
    SEMI            reduce using rule 20 (expression -> expression NE term .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 32


state 47

    (22) term -> term TIMES factor .

    TIMES           reduce using rule 22 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 22 (term -> term TIMES factor .)
    LBRACE          reduce using rule 22 (term -> term TIMES factor .)
    PLUS            reduce using rule 22 (term -> term TIMES factor .)
    MINUS           reduce using rule 22 (term -> term TIMES factor .)
    LT              reduce using rule 22 (term -> term TIMES factor .)
    GT              reduce using rule 22 (term -> term TIMES factor .)
    LE              reduce using rule 22 (term -> term TIMES factor .)
    GE              reduce using rule 22 (term -> term TIMES factor .)
    EQEQ            reduce using rule 22 (term -> term TIMES factor .)
    NE              reduce using rule 22 (term -> term TIMES factor .)
    RPAREN          reduce using rule 22 (term -> term TIMES factor .)
    SEMI            reduce using rule 22 (term -> term TIMES factor .)


state 48

    (23) term -> term DIVIDE factor .

    TIMES           reduce using rule 23 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 23 (term -> term DIVIDE factor .)
    LBRACE          reduce using rule 23 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 23 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 23 (term -> term DIVIDE factor .)
    LT              reduce using rule 23 (term -> term DIVIDE factor .)
    GT              reduce using rule 23 (term -> term DIVIDE factor .)
    LE              reduce using rule 23 (term -> term DIVIDE factor .)
    GE              reduce using rule 23 (term -> term DIVIDE factor .)
    EQEQ            reduce using rule 23 (term -> term DIVIDE factor .)
    NE              reduce using rule 23 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 23 (term -> term DIVIDE factor .)
    SEMI            reduce using rule 23 (term -> term DIVIDE factor .)


state 49

    (26) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    EQEQ            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 26 (factor -> LPAREN expression RPAREN .)


state 50

    (7) let_statement -> LET IDENTIFIER EQ expression SEMI .

    LET             reduce using rule 7 (let_statement -> LET IDENTIFIER EQ expression SEMI .)
    PRINT           reduce using rule 7 (let_statement -> LET IDENTIFIER EQ expression SEMI .)
    IF              reduce using rule 7 (let_statement -> LET IDENTIFIER EQ expression SEMI .)
    $end            reduce using rule 7 (let_statement -> LET IDENTIFIER EQ expression SEMI .)
    RBRACE          reduce using rule 7 (let_statement -> LET IDENTIFIER EQ expression SEMI .)


state 51

    (8) print_statement -> PRINT LPAREN expression RPAREN SEMI .

    LET             reduce using rule 8 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 8 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 8 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    $end            reduce using rule 8 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    RBRACE          reduce using rule 8 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)


state 52

    (9) print_statement -> PRINT LPAREN QUOTE string QUOTE . RPAREN SEMI

    RPAREN          shift and go to state 55


state 53

    (28) string -> string IDENTIFIER .

    QUOTE           reduce using rule 28 (string -> string IDENTIFIER .)
    IDENTIFIER      reduce using rule 28 (string -> string IDENTIFIER .)


state 54

    (10) if_statement -> IF expression LBRACE statement_list RBRACE . ELSE LBRACE statement_list RBRACE
    (11) if_statement -> IF expression LBRACE statement_list RBRACE .

    ELSE            shift and go to state 56
    LET             reduce using rule 11 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 11 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    IF              reduce using rule 11 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    $end            reduce using rule 11 (if_statement -> IF expression LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 11 (if_statement -> IF expression LBRACE statement_list RBRACE .)


state 55

    (9) print_statement -> PRINT LPAREN QUOTE string QUOTE RPAREN . SEMI

    SEMI            shift and go to state 57


state 56

    (10) if_statement -> IF expression LBRACE statement_list RBRACE ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 58


state 57

    (9) print_statement -> PRINT LPAREN QUOTE string QUOTE RPAREN SEMI .

    LET             reduce using rule 9 (print_statement -> PRINT LPAREN QUOTE string QUOTE RPAREN SEMI .)
    PRINT           reduce using rule 9 (print_statement -> PRINT LPAREN QUOTE string QUOTE RPAREN SEMI .)
    IF              reduce using rule 9 (print_statement -> PRINT LPAREN QUOTE string QUOTE RPAREN SEMI .)
    $end            reduce using rule 9 (print_statement -> PRINT LPAREN QUOTE string QUOTE RPAREN SEMI .)
    RBRACE          reduce using rule 9 (print_statement -> PRINT LPAREN QUOTE string QUOTE RPAREN SEMI .)


state 58

    (10) if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE . statement_list RBRACE
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . let_statement
    (5) statement -> . print_statement
    (6) statement -> . if_statement
    (7) let_statement -> . LET IDENTIFIER EQ expression SEMI
    (8) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (9) print_statement -> . PRINT LPAREN QUOTE string QUOTE RPAREN SEMI
    (10) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) if_statement -> . IF expression LBRACE statement_list RBRACE

    LET             shift and go to state 7
    PRINT           shift and go to state 8
    IF              shift and go to state 9

    statement_list                 shift and go to state 59
    statement                      shift and go to state 3
    let_statement                  shift and go to state 4
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6

state 59

    (10) if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list . RBRACE
    (3) statement_list -> statement_list . statement
    (4) statement -> . let_statement
    (5) statement -> . print_statement
    (6) statement -> . if_statement
    (7) let_statement -> . LET IDENTIFIER EQ expression SEMI
    (8) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (9) print_statement -> . PRINT LPAREN QUOTE string QUOTE RPAREN SEMI
    (10) if_statement -> . IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE
    (11) if_statement -> . IF expression LBRACE statement_list RBRACE

    RBRACE          shift and go to state 60
    LET             shift and go to state 7
    PRINT           shift and go to state 8
    IF              shift and go to state 9

    statement                      shift and go to state 10
    let_statement                  shift and go to state 4
    print_statement                shift and go to state 5
    if_statement                   shift and go to state 6

state 60

    (10) if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .

    LET             reduce using rule 10 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 10 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 10 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    $end            reduce using rule 10 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 10 (if_statement -> IF expression LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE .)

